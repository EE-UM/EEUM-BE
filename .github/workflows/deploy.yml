name: CI/CD for EEUM

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Grant execute permission to Gradle
        run: chmod +x ./gradlew

      - name: Create application.yml for user module
        run: |
          mkdir -p ./service/user/src/main/resources
          echo "${{ secrets.USER_APPLICATION_YML }}" > ./service/user/src/main/resources/application.yml

      - name: Create application.yml for posts module
        run: |
          mkdir -p ./service/posts/src/main/resources
          echo "${{ secrets.POSTS_APPLICATION_YML }}" > ./service/posts/src/main/resources/application.yml

      - name: Create application.yml for comment module
        run: |
          mkdir -p ./service/comment/src/main/resources
          echo "${{ secrets.COMMENT_APPLICATION_YML }}" > ./service/comment/src/main/resources/application.yml

      - name: Create application.yml for posts-read module
        run: |
          mkdir -p ./service/posts-read/src/main/resources
          echo "${{ secrets.POSTSREAD_APPLICATION_YML }}" > ./service/posts-read/src/main/resources/application.yml

      - name: Create application.yml for like module
        run: |
          mkdir -p ./service/like/src/main/resources
          echo "${{ secrets.LIKE_APPLICATION_YML }}" > ./service/like/src/main/resources/application.yml

      - name: Build all modules
        run: ./gradlew clean build

      - name: Build user module image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/eeum-user ./service/user

      - name: Build posts module image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/eeum-posts ./service/posts

      - name: Build comment module image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/eeum-comment ./service/comment

      - name: Build posts-read module image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/eeum-posts-read ./service/posts-read

      - name: Build like module image
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/eeum-like ./service/like

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push user image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/eeum-user

      - name: Push posts image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/eeum-posts

      - name: Push comment image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/eeum-comment

      - name: Push posts-read image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/eeum-posts-read

      - name: Push like image
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/eeum-like
            
  deploy:
    needs: build-and-push
    runs-on: self-hosted

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3

      - name: Pull latest images
        run: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/eeum-user
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/eeum-posts
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/eeum-comment
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/eeum-posts-read
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/eeum-like

      - name: Stop and remove containers
        run: docker compose down || true

      - name: Start containers with new images
        run: docker compose -f ${{ github.workspace }}/docker-compose.yml up -d

      - name: Remove dangling images
        run: docker system prune -f